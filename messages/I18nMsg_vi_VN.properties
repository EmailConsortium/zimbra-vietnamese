#
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Web Client
# Copyright (C) 2008, 2009, 2010, 2011, 2013, 2014, 2015, 2016 Synacor, Inc.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software Foundation,
# version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
# ***** END LICENSE BLOCK *****
#
# en_US generated on Fri Jan 18 11:51:15 PST 2008
currencyCode = USD
currencySymbol = $
eraAD = AD
eraBC = BC
firstDayOfWeek = 1
formatDateFull = EEEE, MMMM d, yyyy
formatDateLong = MMMM d, yyyy
formatDateMedium = MMM d, yyyy
formatDateShort = M/d/yy
formatDateNumber=M/d/yyyy
formatDateTime = {0} {1}
formatNumber = #,##0.###
formatNumberCurrency = \u00A4#,##0.00;(\u00A4#,##0.00)
formatNumberInteger = #,##0
formatNumberPercent = #,##0%
formatTimeFull = h:mm:ss a z
formatTimeLong = h:mm:ss a z
formatTimeMedium = h:mm:ss a
formatTimeShort = h:mm a

# Add as many regexes as you'd like (without holes in the numbering sequence). They will in turn test the user input until a match is found.
# The first capturing group of the regex is the hours, the second is the minutes, and the third (optional) specifies am or pm time. Just leave it out if you don't need it.
# When the optional ampm group is present in a match, 12 hours will be converted to 0 hours, and when the matched value is present in 
# the parseTimePMChars value, 12 hours will be added to the time.
parseTime1 = (\\d\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime2 = (\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime3 = (\\d{1,2})(\\d*)\\s*([ap])?
parseTimePMChars = pP

monthAprLong = Th\u00E1ng T\u01B0
monthAprMedium = Thg 4
monthAugLong = Th\u00E1ng T\u00E1m
monthAugMedium = Thg 8
monthDecLong = Th\u00E1ng M\u01B0\u1EDDi Hai
monthDecMedium = Thg 12
monthFebLong = Th\u00E1ng Hai
monthFebMedium = Thg 2
monthJanLong = Th\u00E1ng Gi\u00EAng
monthJanMedium = Thg 1
monthJulLong = Th\u00E1ng B\u1EA3y
monthJulMedium = Thg 7
monthJunLong = Th\u00E1ng S\u00E1u
monthJunMedium = Thg 6
monthMarLong = Th\u00E1ng Ba
monthMarMedium = Thg 3
monthMayLong = Th\u00E1ng N\u0103m
monthMayMedium = Thg 5
monthNovLong = Th\u00E1ng M\u01B0\u1EDDi M\u1ED9t
monthNovMedium = Thg 11
monthOctLong = Th\u00E1ng M\u01B0\u1EDDi
monthOctMedium = Thg 10
monthSepLong = Th\u00E1ng Ch\u00EDn
monthSepMedium = Thg 9
numberInfinity = \u221E
numberNaN = \  
numberSeparatorDecimal = .
numberSeparatorGrouping = ,
numberSeparatorMoneyDecimal = .
numberSignMinus = -
numberSignPerMill = \u2030
numberSignPercent = %
numberZero = 0
periodAm = SA
periodPm = CH
weekdayFriLong = Th\u1EE9 S\u00E1u
weekdayFriMedium = T6
weekdayMonLong = Th\u1EE9 Hai
weekdayMonMedium = T2
weekdaySatLong = Th\u1EE9 B\u1EA3y
weekdaySatMedium = T7
weekdaySunLong = Ch\u1EE7 Nh\u1EADt
weekdaySunMedium = CN
weekdayThuLong = Th\u1EE9 N\u0103m
weekdayThuMedium = T5
weekdayTueLong = Th\u1EE9 Ba
weekdayTueMedium = T3
weekdayWedLong = Th\u1EE9 T\u01B0
weekdayWedMedium = T4
